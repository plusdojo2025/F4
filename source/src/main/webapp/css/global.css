body {
    min-width: 320px;
    max-width: 414px;
    margin: 0 auto;
    font-family: 'Manrope', sans-serif;
    padding: 0px 20px;
    padding-bottom: 95px; /* フッターの高さ分の余白を追加 */
}

span {
    font-size: 18px;
    color: #5C788A;
}

p {
    font-size: 18px;
    line-height: 1.5em;
    margin: 0;
}
/* ------------------------------------------------- */


/* ヘッダー */
.headerH1 {
    margin: 50px 0 10px;
    text-align: center;
    font-size: 17px;
    font-weight: bold;
}


.headerH2 {
    margin: 30px 0 10px;
    text-align: center;
    font-size: 15px;
    font-weight: bold;
}
/* ------------------------------------------------- */


/* 進捗率表示 */
.progressContainer {
    text-align: left;
    padding: 30px 0px;
}

.progressBar {
  height: 15px;
  background: #D4DEE3;
  border-radius: 5px;
  overflow: hidden; /* はみ出したら隠れるようにする */
}

.progressBarFill {
  width: 0%;
  height: 100%;
  background: #00a0f3;
  transition: width 2s ease-in-out; /* アニメーション効果を追加　どちらでも可 */
}

.goalTimeContainer {
    text-align-last: left;
    padding: 20px 0px;
}
/* ------------------------------------------------- */


/* 目標時間表示 */
.goalTimeContainer h1 {
    font-size: 20px;
    font-weight: bold;
}

.goalTimeItem {
    padding: 15px 0px;
    display: flex;
}

.icon {
    border-radius: 10px;
    padding: 10px;
    text-align: center;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.goalTimeText {
    margin-left: 20px;
    font-size: 16px;
}

.goalTimeText {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.goalTimeText p {
    margin: 0;
    font-size: 16px;
}
/* ------------------------------------------------- */


/* フッターメニュー */
.footerMenu {
	min-width: 320px;
    max-width: 414px;
	background-color: fff;
	position: fixed;
	left: 0;                
	right: 0;               
	bottom: 0;
	width: 100%;
	margin: 0 auto;
	display: flex;
	justify-content: space-around;
	border-top: 1px solid #ccc;
	z-index: 1000;          /* 最前面に表示 */
}

.menuContainer {
    display: flex;
    flex-direction: column; 
    align-items: center;
    justify-content: center;/* 上下中央揃え　必要に応じて */
}

.menuContainer a {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-decoration: none;  /* リンクの下線を消す */
}

.menuContainer svg {
    display: block;
    margin: 25px 0 8px; 
}

.menuContainer span {
    font-size: 12px;        
    color: #5C788A;         
    margin-bottom: 20px;
}
/* ------------------------------------------------- */


/* 入力フィールド */
.form-group {
  position: relative;
  margin-bottom: 24px;
}

/* 入力欄 */
.form-group input {
  width: 100%;
  padding: 16px 12px;
  font-size: 16px;
  border: 2px solid #DDDDDD;
  border-radius: 16px;
  background-color: #FFF;
  box-shadow: 0 4px 8px rgba(255, 200, 120, 0.1);
  transition: border-color 0.2s ease;
}

/* ラベル */
.form-group label {
  position: absolute;
  left: 12px;
  top: 16px;
  font-size: 16px;
  color: #999;
  background-color: #ffffff;
  padding: 0 4px;
  pointer-events: none;
  transition: all 0.2s ease;
}

/* フォーカス時または入力時：ラベルを上に小さく移動 */
.form-group input:focus + label,
.form-group input:not(:placeholder-shown) + label {
  top: -8px;
  left: 10px;
  font-size: 13px;
  color: #3c6f8f;
}
 
/* ------------------------------------------------- */


/* ボタン */

.button {
    background: linear-gradient(135deg, #B2D1E5, #8CBAD9);
    border-radius: 40px;
    padding: 12px 20px;
    font-size: 18px;
    font-weight: bold;
    font-family: 'Segoe UI', 'Rounded Mplus 1c', sans-serif;
    color: #0F1417;
    border: none;
    width: 100%;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    transition: transform 0.15s ease, box-shadow 0.15s ease;
}

.button:active {
    transform: scale(0.98);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

/* ------------------------------------------------- */
/* メッセージ表示 */
.errorMessageArea {
            min-height: 1.5em;
            text-align: center;
            margin: 10px 0;
        }

        .errorMessage {
            color: red;
            font-weight: bold;
        }
        
        .successMessage {
            color: #00ff00;
        }

/* ------------------------------------------------- */


.bgColorExercise {
/* 	background-color: #FFBE5C;
 */    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
 background-image: linear-gradient(120deg, #f6d365 0%, #fda085 100%);
}

.bgColorStudy {
/* 	background-color: #6ad2e7;
 */    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
background-image: linear-gradient(120deg, #89f7fe 0%, #66a6ff 100%);}

.bgColorSleep {
/* 	background-color: #B9E089;
 */    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
 background-image: linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%);
}
/* 
.card {
  border-radius: 16px;            
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); 
  padding: 15px;                      
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  margin: 16px auto;
}





@media (hover: none) {
.card:active {
  transform: scale(0.95);
  background-color: #dff9ff; タップ時にほんのり黄色に
  box-shadow: 0 6px 18px rgba(240, 240, 240, 0.4);
  animation: popIn 0.5s ease;
}
}
@media (hover: hover) {
  .card:hover {
    PCホバー用アニメ
  transform: scale(0.95);
  background-color: #dff9ff; タップ時にほんのり黄色に
  box-shadow: 0 6px 18px rgba(240, 240, 240, 0.4);
  animation: popIn 0.5s ease;
}
}




@keyframes popIn {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  60% {
    transform: scale(1.05);
    opacity: 1;
  }
  100% {
    transform: scale(1);
  }
}

 */
 
 .card {
  position: relative;
  border-radius: 16px;
  background-color: #fff;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  padding: 15px;
  margin: 16px auto;
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.6s ease-out forwards;
}

/* ==== フェードイン（ふわっと登場） ==== */
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* ==== 常時うっすら表示される光のベース ==== */
.card::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent 45%,
    rgba(223, 249, 255, 0.4) 50%,
    transparent 55%
  );
  transform: skewX(-20deg);
  opacity: 0.3;
  pointer-events: none;
  z-index: 0;
}

/* ==== ホバー時に一度だけ光が走るアニメーション用ライン ==== */
.card::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 60%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent,
    rgba(223, 249, 255, 0.7),
    transparent
  );
  transform: skewX(-20deg);
  pointer-events: none;
  z-index: 1;
}

/* ==== shine アニメーション ==== */
@keyframes shine {
  0% {
    left: -100%;
  }
  100% {
    left: 120%;
  }
}

/* ==== ホバー時に1回だけアニメーションが発動 ==== */
.card:hover::before {
  animation: shine 1s ease forwards;
}

/* ==== ホバー時のスケールと影（やる気感） ==== */
@media (hover: hover) {
  .card:hover {
    transform: scale(0.97);
	background-image: linear-gradient(to top, #dad4ec 0%, #dad4ec 1%, #f3e7e9 100%);  }
}

/* ==== タップ時の演出（スマホ） ==== */
@media (hover: none) {
  .card:active {
    transform: scale(0.97);
	background-image: linear-gradient(to top, #dad4ec 0%, #dad4ec 1%, #f3e7e9 100%);    animation: popIn 0.4s ease;
  }
}




/* ==== 軽く跳ねるようなエフェクト ==== */
@keyframes popIn {
  0% {
    transform: scale(1);
  }
  60% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(0.97);
  }
}
 